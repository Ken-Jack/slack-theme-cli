#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
BACKUP_FILE="$DIR/backup/ssb-interop.js"
if [ "$(uname -r | sed -n 's/.*\( *Microsoft *\).*/\1/p')" == "Microsoft" ] # Windows OS
then
    OS="windows"
    INTEROP_FOLDER_ROOT="$(cmd.exe /c 'echo|set /p=%LOCALAPPDATA%' | sed -n 's/\\/\//pg' | sed -n 's/C:/\/mnt\/c/p')"
    INTEROP_FOLDER="${INTEROP_FILE_ROOT}/slack/app-3.4.0/resources/app.asar.unpacked/src/static"
    EXE_FILE="${INTEROP_FILE_ROOT}/slack/slack.exe"
elif [ "$(uname)" == "Linux" ] # Linux OS
then
    INTEROP_FOLDER="/usr/lib/slack/resources/app.asar.unpacked/src/static"
elif [ "$(uname)" == "Darwin" ] # Mac OS
then
    INTEROP_FOLDER="/Applications/Slack.app/Contents/Resources/app.asar.unpacked/src/static"
    if [ ! -d "$INTEROP_FOLDER" ]
    then
        IS_VERSION_4=true
        INTEROP_FOLDER="$DIR/files/app.asar.unpacked/dist"
        ASAR_FILE="/Applications/Slack.app/Contents/Resources/app.asar"
        BACKUP_FILE="$BACKUP_FOLDER/ssb-interop.bundle.js"
        ASAR="$DIR/bin/asar"
    fi
fi

if [ $IS_VERSION_4 ]
then
    if [ ! -f $ASAR ]
    then
        echo "asar exec not found"
        exit 1
    fi

    if [ ! -f "$INTEROP_FILE" ]
    then
        $ASAR extract $ASAR_FILE ./files/app.asar.unpacked
    fi
fi

if [ -f "$BACKUP_FILE" ]
then
    cp "$BACKUP_FILE" "$INTEROP_FOLDER"

    # restart slack
    if [ "$OS" == "windows" ] # Windows OS
    then
        cmd.exe /c 'taskkill /F /IM slack.exe' &> /dev/null
        $EXE_FILE </dev/null &>/dev/null & # start slack process in detached mode
    elif [ "$(uname)" == "Linux" ] # Linux OS
    then
        if [ $(ps aux | grep -i slack | wc -l) -gt 1 ]
        then
            killall "slack" # kill all slack processes
        fi
        slack </dev/null &>/dev/null & # start slack process in detached mode
    elif [ "$(uname)" == "Darwin" ] # Mac OS
    then
        if [ $IS_VERSION_4 ]
        then
            sudo $ASAR pack ./files/app.asar.unpacked $ASAR_FILE
        fi

        if [ $(ps aux | grep -i Slack | wc -l) -gt 1 ]
        then
            killall "Slack" # kill all slack processes
        fi
        /Applications/Slack.app/Contents/MacOS/Slack </dev/null &>/dev/null & # start slack process in detached mode
    fi
fi